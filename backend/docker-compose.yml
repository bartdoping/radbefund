version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: radbefund-postgres
    environment:
      POSTGRES_DB: radbefund_plus
      POSTGRES_USER: radbefund_user
      POSTGRES_PASSWORD: radbefund_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radbefund_user -d radbefund_plus"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - radbefund-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: radbefund-redis
    command: redis-server --appendonly yes --requirepass radbefund_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - radbefund-network

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radbefund-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      USE_HTTPS: false
      
      # Database
      DATABASE_URL: postgresql://radbefund_user:radbefund_password@postgres:5432/radbefund_plus
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: radbefund_plus
      DB_USER: radbefund_user
      DB_PASSWORD: radbefund_password
      DB_SSL: false
      
      # Redis
      REDIS_URL: redis://:radbefund_redis_password@redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: radbefund_redis_password
      REDIS_DB: 0
      
      # JWT
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      
      # AI
      PROVIDER: openai
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4o-mini
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX_REQUESTS: 100
      AUTH_RATE_LIMIT_WINDOW_MS: 900000
      AUTH_RATE_LIMIT_MAX_REQUESTS: 5
      
      # Monitoring
      PROMETHEUS_PORT: 9090
      LOG_LEVEL: info
      
      # Cache TTL
      CACHE_TTL_USER_SESSION: 604800
      CACHE_TTL_LAYOUT_TEMPLATE: 2592000
      CACHE_TTL_AI_RESPONSE: 3600
      CACHE_TTL_USER_PREFERENCES: 86400
      
      # Security
      CORS_ORIGIN: https://localhost:3000,https://127.0.0.1:3000
      HELMET_ENABLED: true
    ports:
      - "3001:3001"
      - "9090:9090"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - radbefund-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: radbefund-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - radbefund-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: radbefund-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - radbefund-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  radbefund-network:
    driver: bridge
